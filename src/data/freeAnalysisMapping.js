// 무료 얼굴 분석 서비스용 매핑 테이블
// 30가지 얼굴 특징별로 명품, 자동차, 도시, 직업, 음식을 1:1 매핑

// 30가지 얼굴 특징 (OpenCV 분석 기반)
export const FACE_FEATURES = [
  "강인한_턱선형", "부드러운_곡선형", "날카로운_눈매형", "둥근_눈매형", "큰_눈형",
  "작은_눈형", "높은_코형", "작은_코형", "도톰한_입술형", "얇은_입술형",
  "각진_얼굴형", "둥근_얼굴형", "긴_얼굴형", "사각_얼굴형", "계란형_얼굴",
  "하트형_얼굴", "다이아몬드형_얼굴", "역삼각형_얼굴", "넓은_이마형", "좁은_이마형",
  "높은_광대뼈형", "부드러운_광대뼈형", "뚜렷한_눈썹형", "연한_눈썹형", "진한_속눈썹형",
  "밝은_피부형", "따뜻한_피부형", "차가운_피부형", "대칭적_얼굴형", "독특한_매력형"
];

export const FACE_TYPE_DESCRIPTIONS = {
  ROYAL: {
    title: '위엄 있는 얼굴',
    description: '강한 턱선과 큰 눈, 높은 코가 특징인 카리스마 있는 얼굴형',
    personality: '리더십이 강하고 자신감 넘치는 성격'
  },
  ELEGANT: {
    title: '우아한 얼굴',
    description: '갸름한 얼굴과 작은 코, 얇은 입술이 특징인 세련된 얼굴형',
    personality: '품격 있고 섬세한 감성을 가진 성격'
  },
  WARM: {
    title: '친근한 얼굴',
    description: '둥근 얼굴과 부드러운 눈, 도톰한 입술이 특징인 온화한 얼굴형',
    personality: '따뜻하고 포용력 있는 성격'
  },
  DYNAMIC: {
    title: '역동적 얼굴',
    description: '각진 얼굴과 날카로운 눈, 강한 코가 특징인 에너지 넘치는 얼굴형',
    personality: '활동적이고 도전적인 성격'
  },
  DREAMY: {
    title: '몽환적 얼굴',
    description: '긴 얼굴과 큰 눈, 작은 입이 특징인 신비로운 얼굴형',
    personality: '감성적이고 창의적인 성격'
  },
  NATURAL: {
    title: '자연스러운 얼굴',
    description: '균형 잡힌 비율과 중간 크기 이목구비가 특징인 조화로운 얼굴형',
    personality: '균형감 있고 안정적인 성격'
  }
};

// 명품 브랜드 매핑 (30개 - FACE_FEATURES와 1:1 대응)
export const luxuryMapping = [
  "롤스로이스", "샤넬", "구찌", "에르메스", "루이비통",
  "티파니", "카르티에", "디올", "프라다", "펜디",
  "버버리", "발렌시아가", "알렉산더맥퀸", "지방시", "발망",
  "셀린느", "끌로에", "이자벨마랑", "스텔라맥카트니", "보테가베네타",
  "로에베", "브루넬로쿠치넬리", "발렌티노", "마르니", "토드스",
  "막스마라", "아크네스튜디오", "이세이미야케", "꼼데가르송", "돌체앤가바나"
];

// 자동차 매핑 (30개 - FACE_FEATURES와 1:1 대응)
export const carMapping = [
  "벤틀리 뮬산", "롤스로이스 팬텀", "재규어 XJ", "테슬라 모델S", "미니 쿠퍼",
  "폭스바겐 비틀", "메이바흐 S클래스", "렉서스 LS", "현대 아반떼", "기아 K5",
  "람보르기니 우라칸", "맥라렌 720S", "포르쉐 911", "BMW M3", "아우디 RS6",
  "마세라티 레반떼", "알파로메오 스텔비오", "인피니티 Q50", "캐딜락 CT6", "링컨 컨티넨탈",
  "볼보 XC90", "BMW X5", "벤츠 GLE", "아우디 Q7", "토요타 랜드크루저",
  "페라리 488", "아스톤마틴 DB11", "제네시스 G90", "토요타 캠리", "혼다 어코드"
];

// 세계 도시 매핑 (30개 - FACE_FEATURES와 1:1 대응)
export const cityMapping = [
  "런던", "파리", "뉴욕", "도쿄", "프라하",
  "서울", "비엔나", "밀라노", "바르셀로나", "암스테르담",
  "홍콩", "싱가포르", "시드니", "베니스", "부다페스트",
  "취리히", "코펜하겐", "스톡홀름", "상트페테르부르크", "에든버러",
  "교토", "플로렌스", "제네바", "나폴리", "리우데자네이루",
  "부산", "멜버른", "산토리니", "밴쿠버", "베르사유"
];

// 직업 매핑 (30개 - FACE_FEATURES와 1:1 대응)
export const jobMapping = [
  "CEO", "패션디자이너", "운동선수", "작가", "엔지니어",
  "수의사", "외교관", "큐레이터", "세일즈", "화가",
  "판사", "피아니스트", "기자", "영화감독", "생물학자",
  "의사", "발레리나", "소방관", "사진작가", "환경운동가",
  "건축가", "승무원", "경찰", "음악가", "가이드",
  "교사", "상담사", "간호사", "요리사", "보육교사"
];

// 음식 매핑 (30개 - FACE_FEATURES와 1:1 대응)
export const foodMapping = [
  "캐비어", "오마카세", "바베큐", "디저트 코스", "샐러드",
  "현미밥", "트러플 파스타", "프랑스 요리", "햄버거", "아이스크림",
  "와규 스테이크", "티라미수", "타코", "크레페", "견과류",
  "로브스터 테르미도르", "마카롱", "매운 치킨", "차", "요거트",
  "돔페리뇽", "샴페인", "에너지 드링크", "와인", "스무디",
  "된장찌개", "파스타", "피자", "치킨", "라면"
];

// 전체 매핑 테이블
export const ANALYSIS_MAPPINGS = {
  luxury: luxuryMapping,
  car: carMapping,
  city: cityMapping,
  job: jobMapping,
  food: foodMapping
};

// 카테고리 정보
export const CATEGORIES = {
  luxury: {
    title: '내 얼굴에 어울리는 명품',
    icon: '💎',
    description: '당신의 얼굴 특징에 맞는 명품 브랜드를 찾아보세요'
  },
  car: {
    title: '내 얼굴에 어울리는 자동차',
    icon: '🚗',
    description: '당신의 이미지에 맞는 자동차를 찾아보세요'
  },
  city: {
    title: '내 얼굴에 어울리는 도시',
    icon: '🌍',
    description: '당신과 잘 맞는 세계의 도시를 찾아보세요'
  },
  job: {
    title: '내 얼굴에 어울리는 직업',
    icon: '💼',
    description: '당신에게 어울리는 직업을 찾아보세요'
  },
  food: {
    title: '내 얼굴에 어울리는 음식',
    icon: '🍽️',
    description: '당신의 취향에 맞는 음식을 찾아보세요'
  }
};

// 얼굴 특징 분석 함수 (OpenCV 결과를 바탕으로 특징 인덱스 결정)
export const analyzeFaceFeatures = (faceData) => {
  // 실제 OpenCV 분석 결과를 바탕으로 얼굴 특징 인덱스를 결정하는 로직
  // 현재는 임시로 랜덤 반환 (실제 구현 시 얼굴 특징 분석 로직 추가)
  return Math.floor(Math.random() * 30);
};

// 결과 가져오기 함수
export const getAnalysisResult = (faceFeatureIndex, category) => {
  const mapping = ANALYSIS_MAPPINGS[category];
  if (!mapping || faceFeatureIndex < 0 || faceFeatureIndex >= 30) {
    return null;
  }
  return mapping[faceFeatureIndex];
};